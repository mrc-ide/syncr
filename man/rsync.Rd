% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsync.R
\name{rsync}
\alias{rsync}
\title{Wrapper around rsync}
\usage{
rsync(src, dest, verbose = FALSE, quiet = FALSE, no_motd = FALSE,
  checksum = FALSE, archive = FALSE, recursive = FALSE,
  relative = FALSE, no_implied_dirs = FALSE, backup = FALSE,
  backup_dir = NULL, suffix = NULL, update = FALSE, inplace = FALSE,
  append = FALSE, dirs = FALSE, links = FALSE, copy_links = FALSE,
  copy_unsafe_links = FALSE, safe_links = FALSE, copy_dirlinks = FALSE,
  keep_dirlinks = FALSE, hard_links = FALSE, perms = FALSE,
  executability = FALSE, chmod = NULL, owner = FALSE, group = FALSE,
  devices = FALSE, specials = FALSE, times = FALSE,
  omit_dir_times = FALSE, super = FALSE, sparse = FALSE,
  dry_run = FALSE, whole_file = FALSE, one_file_system = FALSE,
  block_size = NULL, rsh = NULL, rsync_path = NULL, existing = FALSE,
  ignore_existing = FALSE, remove_source_files = FALSE, delete = FALSE,
  delete_before = FALSE, delete_during = FALSE, delete_after = FALSE,
  delete_excluded = FALSE, ignore_errors = FALSE, force = FALSE,
  max_delete = NULL, max_size = NULL, min_size = NULL, partial = FALSE,
  partial_dir = NULL, delay_updates = FALSE, prune_empty_dirs = FALSE,
  numeric_ids = FALSE, timeout = NULL, ignore_times = FALSE,
  size_only = FALSE, modify_window = NULL, temp_dir = NULL,
  fuzzy = FALSE, compare_dest = NULL, copy_dest = NULL,
  link_dest = NULL, compress = FALSE, compress_level = NULL,
  cvs_exclude = FALSE, filter = NULL, exclude = NULL,
  exclude_from = NULL, include = NULL, include_from = NULL,
  files_from = NULL, from0 = FALSE, address = NULL, port = NULL,
  sockopts = NULL, blocking_io = FALSE, stats = FALSE,
  eight_bit_output = FALSE, human_readable = FALSE, progress = FALSE,
  itemize_changes = FALSE, out_format = NULL, log_file = NULL,
  log_file_format = NULL, password_file = NULL, list_only = FALSE,
  bwlimit = NULL, write_batch = NULL, only_write_batch = NULL,
  read_batch = NULL, protocol = NULL, checksum_seed = NULL,
  ipv4 = FALSE, ipv6 = FALSE, extended_attributes = FALSE,
  cache = FALSE, drop_src_directory = FALSE, args_only = FALSE)
}
\arguments{
\item{src}{Source files to copy.  See details}

\item{dest}{A single destination path, possibly remote.}

\item{verbose}{increase verbosity}

\item{quiet}{suppress non-error messages}

\item{no_motd}{suppress daemon-mode MOTD (see caveat)}

\item{checksum}{skip based on checksum, not mod-time & size}

\item{archive}{archive mode; same as recursive, links, perms, times, group, owner, devices specials but no hard_links}

\item{recursive}{recurse into directories}

\item{relative}{use relative path names}

\item{no_implied_dirs}{don't send implied dirs with relative}

\item{backup}{make backups (see suffix & backup_dir)}

\item{backup_dir}{make backups into hierarchy based in DIR}

\item{suffix}{backup suffix (default ~ w/o backup_dir)}

\item{update}{skip files that are newer on the receiver}

\item{inplace}{update destination files in-place}

\item{append}{append data onto shorter files}

\item{dirs}{transfer directories without recursing}

\item{links}{copy symlinks as symlinks}

\item{copy_links}{transform symlink into referent file/dir}

\item{copy_unsafe_links}{only "unsafe" symlinks are transformed}

\item{safe_links}{ignore symlinks that point outside the tree}

\item{copy_dirlinks}{transform symlink to dir into referent dir}

\item{keep_dirlinks}{treat symlinked dir on receiver as dir}

\item{hard_links}{preserve hard links}

\item{perms}{preserve permissions}

\item{executability}{preserve executability}

\item{chmod}{affect file and/or directory permissions}

\item{owner}{preserve owner (super-user only)}

\item{group}{preserve group}

\item{devices}{preserve device files (super-user only)}

\item{specials}{preserve special files}

\item{times}{preserve times}

\item{omit_dir_times}{omit directories when preserving times}

\item{super}{receiver attempts super-user activities}

\item{sparse}{handle sparse files efficiently}

\item{dry_run}{show what would have been transferred}

\item{whole_file}{copy files whole (without rsync algorithm)}

\item{one_file_system}{don't cross filesystem boundaries}

\item{block_size}{force a fixed checksum block-size}

\item{rsh}{specify the remote shell to use}

\item{rsync_path}{specify the rsync to run on remote machine}

\item{existing}{skip creating new files on receiver}

\item{ignore_existing}{skip updating files that exist on receiver}

\item{remove_source_files}{sender removes synchronized files (non-dir)}

\item{delete}{delete extraneous files from dest dirs}

\item{delete_before}{receiver deletes before transfer (default)}

\item{delete_during}{receiver deletes during xfer, not before}

\item{delete_after}{receiver deletes after transfer, not before}

\item{delete_excluded}{also delete excluded files from dest dirs}

\item{ignore_errors}{delete even if there are I/O errors}

\item{force}{force deletion of dirs even if not empty}

\item{max_delete}{don't delete more than NUM files}

\item{max_size}{don't transfer any file larger than SIZE}

\item{min_size}{don't transfer any file smaller than SIZE}

\item{partial}{keep partially transferred files}

\item{partial_dir}{put a partially transferred file into DIR}

\item{delay_updates}{put all updated files into place at end}

\item{prune_empty_dirs}{prune empty directory chains from file_list}

\item{numeric_ids}{don't map uid/gid values by user/group name}

\item{timeout}{set I/O timeout in seconds}

\item{ignore_times}{don't skip files that match size and time}

\item{size_only}{skip files that match in size}

\item{modify_window}{compare mod_times with reduced accuracy}

\item{temp_dir}{create temporary files in directory DIR}

\item{fuzzy}{find similar file for basis if no dest file}

\item{compare_dest}{also compare received files relative to DIR}

\item{copy_dest}{... and include copies of unchanged files}

\item{link_dest}{hardlink to files in DIR when unchanged}

\item{compress}{compress file data during the transfer}

\item{compress_level}{explicitly set compression level}

\item{cvs_exclude}{auto_ignore files in the same way CVS does}

\item{filter}{add a file_filtering RULE}

\item{exclude}{exclude files matching PATTERN}

\item{exclude_from}{read exclude patterns from FILE}

\item{include}{don't exclude files matching PATTERN}

\item{include_from}{read include patterns from FILE}

\item{files_from}{read list of source-file names from FILE}

\item{from0}{all *from/filter files are delimited by 0s}

\item{address}{bind address for outgoing socket to daemon}

\item{port}{specify double_colon alternate port number}

\item{sockopts}{specify custom TCP options}

\item{blocking_io}{use blocking I/O for the remote shell}

\item{stats}{give some file-transfer stats}

\item{eight_bit_output}{leave high-bit chars unescaped in output}

\item{human_readable}{output numbers in a human-readable format}

\item{progress}{show progress during transfer}

\item{itemize_changes}{output a change-summary for all updates}

\item{out_format}{output updates using the specified FORMAT}

\item{log_file}{log what we're doing to the specified FILE}

\item{log_file_format}{log updates using the specified FMT}

\item{password_file}{read password from FILE}

\item{list_only}{list the files instead of copying them}

\item{bwlimit}{limit I/O bandwidth; KBytes per second}

\item{write_batch}{write a batched update to FILE}

\item{only_write_batch}{like write_batch but w/o updating dest}

\item{read_batch}{read a batched update from FILE}

\item{protocol}{force an older protocol version to be used}

\item{checksum_seed}{set block/file checksum seed (advanced)}

\item{ipv4}{prefer IPv4}

\item{ipv6}{prefer IPv6}

\item{extended_attributes}{copy extended attributes, resource forks}

\item{cache}{disable fcntl(F_NOCACHE)}

\item{drop_src_directory}{In the case where \code{src} is a single
directory, don't copy the directory, but copy the contents.}

\item{args_only}{Don't run anything and instead return the
arguments that would have been passed to rsync.}
}
\description{
Wrapper around all of \emph{rsync}'s options.  I'm not sure how
useful this will be (because you'll really need to read rsync's
extensive manual to use this, but perhaps it will be useful.
}

